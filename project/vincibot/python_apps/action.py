#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import time
import drv_led
import drv_motion
import matatalab
import system_state
import audio
import drv_led_matrix


MOTION_FORWARD    = 0
MOTION_TURN_LEFT  = 1
MOTION_TURN_RIGHT = 2
MOTION_BACKWARD   = 3

led_matrix = drv_led_matrix._display

face_data_dict = {
    0: [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
    1: [0x00,0x00,0x18,0x18,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x18,0x18,0x00,0x00],
    2: [0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x00,0x00,0x00,0x00],
    3: [0x00,0x00,0x1c,0x38,0x3e,0x7c,0x3e,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
    4: [0x00,0x00,0x1c,0x38,0x3e,0x7c,0x22,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
    5: [0x00,0x00,0x00,0x00,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x00,0x00,0x00,0x00],
    6: [0x00,0x00,0x7c,0x3e,0x7c,0x3e,0x7c,0x3e,0x7c,0x3e,0x7c,0x3e,0x00,0x00,0x00,0x00],
    7: [0x00,0x00,0x7c,0x00,0x7c,0x3c,0x7c,0x3c,0x7c,0x3c,0x7c,0x3c,0x00,0x00,0x00,0x00],
    8: [0x00,0x00,0x00,0x3e,0x3c,0x3e,0x3c,0x3e,0x3c,0x3e,0x3c,0x3e,0x00,0x00,0x00,0x00],
    9: [0x00,0x00,0x0c,0x30,0x1e,0x78,0x1e,0x78,0x1e,0x78,0x1e,0x78,0x0c,0x30,0x00,0x00],
    10: [0x00,0x00,0x1c,0x38,0x3e,0x7c,0x2e,0x5c,0x2e,0x5c,0x22,0x44,0x1c,0x38,0x00,0x00],
    11: [0x00,0x00,0x00,0x38,0x00,0x6c,0x38,0x64,0x60,0x7c,0x38,0x7c,0x00,0x38,0x00,0x00],
    12: [0x18,0x18,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x18,0x18,0x00,0x00,0x00,0x00],
    13: [0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00],
    14: [0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x00],
    15: [0x00,0x00,0x1f,0x1f,0x1f,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
    16: [0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
    17: [0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00],
    18: [0x00,0x00,0xf8,0xf8,0xf8,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
    19: [0x00,0x00,0xf8,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
    20: [0x00,0x00,0x00,0x00,0x3c,0x3c,0x7e,0x7e,0x7e,0x7e,0x3c,0x3c,0x00,0x00,0x00,0x00],
    21: [0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x7e,0x7e,0x7e,0x00,0x00,0x00,0x00,0x00,0x00],
}



def play(file_name, sync):
    music_root = '/sdcard/music/'
    file_full_name = "%s%s" %(music_root, file_name)
    audio.play(file_full_name, sync)

def play_emotion(file_name, sync):
    music_root = '/sdcard/music/emotion/'
    file_full_name = "%s%s%s" %(music_root, file_name, ".mp3")
    audio.play(file_full_name, sync)

def play_move_time(index, delay):
    audio.play_move(index, 0)
    time.sleep_ms(delay)

def action_show_image(data_id, time_data = "None"):
    data_array = bytearray(face_data_dict.get(data_id))
    led_matrix.show_image(data_array, time_data)

def action_sleep(delay, para):
    time.sleep_ms(delay)
        
def set_vol(value):
    audio.set_volume(value)
    
def get_vol():
    return audio.get_volume()

def action_motion(type, value):
    if(type == MOTION_FORWARD):
        drv_motion.move_position("forward", value, "mm", True)
    elif(type == MOTION_TURN_LEFT):
        drv_motion.move_angle("left", value, "degrees", True)
    elif(type == MOTION_TURN_RIGHT):
        drv_motion.move_angle("right", value, "degrees", True)
    elif(type == MOTION_BACKWARD):
        drv_motion.move_position("backward", value, "mm", True)
    
def action_eye(eye_mode, para):
    drv_led.led_eye_set(eye_mode, para)

def action_play_stop():
    audio.play_stop()

def action_cancel_cmd():
    action_play_stop()
    action_eye(2,0)
    drv_motion.stop(2)

def action_uint_unknow(p1,p2):
    pass

def action_move_raw_angle(angle, speed):
    drv_motion.move_raw_angle(angle, speed, False)

def action_move_raw_position(angle, speed):
    drv_motion.move_raw_position(angle, speed, False)

action_unit = {
0x01:[100, action_motion, MOTION_TURN_RIGHT, 90//6], 
0x02:[100, action_motion, MOTION_TURN_LEFT, 90//6],
0x03:[100, action_motion, MOTION_FORWARD, 100//3],
0x04:[100, action_motion, MOTION_BACKWARD, 100//3],
0x05:[100, action_motion, MOTION_TURN_LEFT, 360],
0x06:[100, action_motion, MOTION_TURN_RIGHT, 360],
0x07:[100, action_eye, drv_led.BOTH_EYE_MODE, 0x15],
0x08:[100, action_eye, drv_led.BOTH_EYE_MODE, 0x35],
0x09:[100, action_eye, drv_led.BOTH_EYE_MODE, 0x45],
0x0a:[100, action_eye, drv_led.BOTH_EYE_MODE, 0x60],
0x0b:[100, action_motion, MOTION_TURN_LEFT, 90//12],
0x0c:[100, action_motion, MOTION_TURN_RIGHT, 90//12],
0x0d:[0, play_move_time, 1, 100],
0x0e:[0, play_move_time, 2, 100],
0x0f:[0, play_move_time, 3, 100],
0x10:[0, play_move_time, 4, 100],
0x11:[0, play_move_time, 5, 100],
0x12:[0, play_move_time, 6, 100],
0x13:[1, action_motion, MOTION_FORWARD, 100//6],
0x14:[1, action_motion, MOTION_BACKWARD, 100//12],
0x15:[100, action_eye, drv_led.BOTH_EYE_MODE, 0x15],
0x16:[1, action_motion, MOTION_TURN_LEFT, 90//3],
0x17:[1, action_motion, MOTION_TURN_RIGHT, 90//3],
0x18:[1, action_motion, MOTION_TURN_LEFT, 90],
0x19:[1, action_motion, MOTION_TURN_RIGHT, 90],
0x1a:[1, action_motion, MOTION_FORWARD, 10],
0x1b:[1, action_motion, MOTION_BACKWARD, 10],
0x1c:[1, action_motion, MOTION_FORWARD, 100//30],
0x1d:[1, action_motion, MOTION_BACKWARD, 100//30],
0x1e:[100, action_eye, drv_led.BOTH_EYE_MODE, 0x55],
0x1f:[1, action_eye, drv_led.BOTH_EYE_MODE, 0x25],
0x20:[1, action_eye, drv_led.BOTH_EYE_MODE, 0x05],
0x21:[0, play_emotion, "happy", False],
0x22:[0, play_emotion, "joyful", False],
0x23:[0, play_emotion, "surprised", False],
0x24:[0, action_sleep, 100, 0],
0x25:[0, action_sleep, 200, 0],
0x26:[0, action_sleep, 500, 0],
0x27:[0, action_sleep, 1000, 0],
0x28:[0, action_sleep, 2000, 0],
0x29:[0, action_sleep, 5000, 0],
0x2a:[0, action_sleep, 800, 0],
0x2b:[0, action_sleep, 300, 0],
0x30:[0, action_show_image, 0, "None"],
0x31:[0, action_show_image, 1, "None"],
0x32:[0, action_show_image, 2, "None"],
0x33:[0, action_show_image, 3, "None"],
0x34:[0, action_show_image, 4, "None"],
0x35:[0, action_show_image, 5, "None"],
0x36:[0, action_show_image, 6, "None"],
0x37:[0, action_show_image, 7, "None"],
0x38:[0, action_show_image, 8, "None"],
0x39:[0, action_show_image, 9, "None"],
0x3a:[0, action_show_image, 10, "None"],
0x3b:[0, action_show_image, 11, "None"],
0x3c:[0, action_show_image, 12, "None"],
0x3d:[0, action_show_image, 13, "None"],
0x3e:[0, action_show_image, 14, "None"],
0x3f:[0, action_show_image, 15, "None"],
0x40:[0, action_show_image, 16, "None"],
0x41:[0, action_show_image, 17, "None"],
0x42:[0, action_show_image, 18, "None"],
0x43:[0, action_show_image, 19, "None"],
0x44:[0, action_show_image, 20, "None"],
0x45:[0, action_show_image, 21, "None"],
0x46:[0, action_show_image, 22, "None"],
0x47:[0, action_show_image, 23, "None"],
0x48:[0, action_show_image, 24, "None"],
0x49:[0, action_show_image, 25, "None"],
0x4a:[0, action_show_image, 26, "None"],
0x4b:[0, action_show_image, 27, "None"],
0x4c:[0, action_show_image, 28, "None"],
0x4e:[0, action_show_image, 29, "None"],
0x4f:[0, action_show_image, 30, "None"],
0x50:[0, action_move_raw_angle, 45, 20],
0x51:[0, action_move_raw_angle, -90, 20],
0x52:[0, action_move_raw_angle, 45, 20],
}

dance_index_name = {
1:'name1',
2:'name2',
3:'name3',
4:'name4',
5:'name5',
6:'name6',
}

dance_code = {
1:[3,4,1,2,5,6,7,8,9,0x0a],
2:[26,26,26,5,8,0x0a,27,27,27,6,9,0x0a],
3:[7,22,0x0a,23,8,22,0x0a,23,9,22,0x0a,23,30,5,0x0a],
4:[8,5,31,31,6,31,32,0x0a],
5:[1,1,2,2,19,21,20,20,0xa],
6:[28,28,28,27,24,28,28,28,27,25,28,28,28,27],
}

def action_dance_code_get(index):
    return dance_code.get(index,[])

movement_code = {
1:[7,13,0x0a],
2:[1,2,14,2,1],
3:[3,15,4],
4:[3,3,16,4,4],
5:[9,17,0x0a],
6:[6,18,5,0x0a],
}

def action_movement_code_get(index):
    return movement_code.get(index, [])

emotion_code = {
"happy":[0x21,0x31,0x25,0x32,0x25,0x33,0x25,0x34,0x27,0x33,0x25,0x32,0x25,0x31,0x26],
"surprised":[0x23,0x31,0x25,0x35,0x2a,0x36,0x2a,0x37,0x28,0x38,0x26,0x27,0x35,0x27,0x31,0x26],
"joyful":[0x22,0x39,0x24,0x25,0x3a,0x26,0x3b,0x2a,0x39,0x26],
4:[3,3,16,4,4],
5:[9,17,0x0a],
6:[6,18,5,0x0a],
}

def action_emotion_code_get(index):
    return emotion_code.get(index, [])

behavior_code = {
"look around":[0x31,0x2b,0x3c,0x2b,0x3d,0x2b,0x50,0x3e,0x26,0x3f,0x2b,0x40,0x2b,0x2b,0x3f,0x2b,0x3e,0x2b,0x51,0x3d,0x26,0x41,0x26,0x42,0x2b,0x43,0x2b,0x2b,0x42,0x2b,0x41,0x2b,0x52,0x2b,0x3d,0x25,0x3c,0x25,0x31,0x25,0x44,0x25,0x45,0x25,0x44,0x25,0x31,0x25],
"naughty":[0x31,0x2b,0x3c,0x2b,0x3d,0x2b,0x50,0x3e,0x26,0x3f,0x2b,0x40,0x2b,0x2b,0x3f,0x2b,0x3e,0x2b,0x51,0x3d,0x26,0x41,0x26,0x42,0x2b,0x43,0x2b,0x2b,0x42,0x2b,0x41,0x2b,0x52,0x2b,0x3d,0x25,0x3c,0x25,0x31,0x25,0x44,0x25,0x45,0x25,0x44,0x25,0x31,0x25],
"proud":[0x31,0x2b,0x3c,0x2b,0x3d,0x2b,0x50,0x3e,0x26,0x3f,0x2b,0x40,0x2b,0x2b,0x3f,0x2b,0x3e,0x2b,0x51,0x3d,0x26,0x41,0x26,0x42,0x2b,0x43,0x2b,0x2b,0x42,0x2b,0x41,0x2b,0x52,0x2b,0x3d,0x25,0x3c,0x25,0x31,0x25,0x44,0x25,0x45,0x25,0x44,0x25,0x31,0x25],
"hurt":[0x31,0x2b,0x3c,0x2b,0x3d,0x2b,0x50,0x3e,0x26,0x3f,0x2b,0x40,0x2b,0x2b,0x3f,0x2b,0x3e,0x2b,0x51,0x3d,0x26,0x41,0x26,0x42,0x2b,0x43,0x2b,0x2b,0x42,0x2b,0x41,0x2b,0x52,0x2b,0x3d,0x25,0x3c,0x25,0x31,0x25,0x44,0x25,0x45,0x25,0x44,0x25,0x31,0x25],
"sprint":[0x31,0x2b,0x3c,0x2b,0x3d,0x2b,0x50,0x3e,0x26,0x3f,0x2b,0x40,0x2b,0x2b,0x3f,0x2b,0x3e,0x2b,0x51,0x3d,0x26,0x41,0x26,0x42,0x2b,0x43,0x2b,0x2b,0x42,0x2b,0x41,0x2b,0x52,0x2b,0x3d,0x25,0x3c,0x25,0x31,0x25,0x44,0x25,0x45,0x25,0x44,0x25,0x31,0x25],
"circling":[0x31,0x2b,0x3c,0x2b,0x3d,0x2b,0x50,0x3e,0x26,0x3f,0x2b,0x40,0x2b,0x2b,0x3f,0x2b,0x3e,0x2b,0x51,0x3d,0x26,0x41,0x26,0x42,0x2b,0x43,0x2b,0x2b,0x42,0x2b,0x41,0x2b,0x52,0x2b,0x3d,0x25,0x3c,0x25,0x31,0x25,0x44,0x25,0x45,0x25,0x44,0x25,0x31,0x25],
}

def action_behavior_code_get(index):
    return behavior_code.get(index, [])

def action_parse(list):
    for byte in list:
        [delay, func, para1, para2] = action_unit.get(byte, [0, action_uint_unknow, 0, 0])
        cmd_cancel_flag = system_state.get_cmd_cancel_flag()
        if(cmd_cancel_flag == True):
            print("command cancle flag is true")
            return
        func(para1, para2)
        time.sleep_ms(delay + 100)
    time.sleep_ms(500)
    action_play_stop()

def action_dance(index):
    audio.play_dance(index, 0)
    dance_list = action_dance_code_get(index)
    print("action_dance", dance_list)
    action_parse(dance_list)

def action_movement(index):
    movement_list = action_movement_code_get(index)
    print("action_movement", movement_list)
    action_parse(movement_list)

def dance(dance_name):
    print("dance:%s" %(dance_name))
    if dance_name in dance_index_name.keys() :
        action_dance(dance_name)
    else :
        audio.play_dance(1, 0)
        dance_list = action_dance_code_get(1)
        action_parse(dance_list)

def behavior(behavior_name):
    print("behavior:%s" %(behavior_name))
    behavior_list = action_behavior_code_get(behavior_name)
    if behavior_list == []:
        pass
    else:
        action_parse(behavior_list)

def emotion(emotion_name):
    print("emotion:%s" %(emotion_name))
    emotion_list = action_emotion_code_get(emotion_name)
    if emotion_list == []:
        pass
    else:
        action_parse(emotion_list)
